name: Build and Publish Godot editor and templates

on:
  push:
    paths:
      - ".github/workflows/spine-godot.yml"
      - 'spine-godot/**'
      - 'spine-cpp/**'
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_EC2_METADATA_DISABLED: true
  EM_VERSION: 3.1.10
  GODOT_TAG: master
  GODOT_VERSION: master

jobs:

  godot-editor-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup python and scons
        uses: ./.github/actions/setup-godot-deps

      - name: Build Godot artifact
        shell: bash
        run: |          
          ./spine-godot/build/setup.sh $GODOT_TAG false
          ./spine-godot/build/build.sh editor          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: godot-editor-windows.zip
          path: spine-godot/godot/bin/godot.windows.opt.tools.64.s.exe


  godot-template-linux:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup python and scons
        uses: ./.github/actions/setup-godot-deps   

      - name: Build Godot artifact
        run: |          
          sudo apt-get update
          sudo apt-get install build-essential scons pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev
          ./spine-godot/build/setup.sh $GODOT_TAG false
          ./spine-godot/build/build-templates.sh linux

      - name: Upload artifacts debug
        uses: actions/upload-artifact@v2
        with:
          name: godot-template-linux-debug.zip
          path: spine-godot/godot/bin/linux_x11_64_debug

      - name: Upload artifacts release
        uses: actions/upload-artifact@v2
        with:
          name: godot-template-linux-release.zip
          path: spine-godot/godot/bin/linux_x11_64_release

  godot-template-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup python and scons
        uses: ./.github/actions/setup-godot-deps

      - name: Build Godot artifact
        shell: bash
        run: |
          ./spine-godot/build/setup.sh $GODOT_TAG false
          ./spine-godot/build/build-templates.sh windows

      - name: Upload artifacts debug
        uses: actions/upload-artifact@v2
        with:
          name: godot-template-windows-debug.zip
          path: spine-godot/godot/bin/windows_64_debug.exe

      - name: Upload artifacts release
        uses: actions/upload-artifact@v2
        with:
          name: godot-template-windows-release.zip
          path: spine-godot/godot/bin/windows_64_release.exe

  upload-to-s3:
    needs: [godot-editor-windows, godot-template-windows, godot-template-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download godot-editor-windows artifact
        uses: actions/download-artifact@v2
        with:
          name: godot-editor-windows.zip

      - name: Download godot-template-windows-release artifact
        uses: actions/download-artifact@v2
        with:
          name: godot-template-windows-release.zip

      - name: Download godot-template-windows-debug artifact
        uses: actions/download-artifact@v2
        with:
          name: godot-template-windows-debug.zip

      - name: Download godot-template-linux-release artifact
        uses: actions/download-artifact@v2
        with:
          name: godot-template-linux-release.zip
          
      - name: Download godot-template-linux-debug artifact
        uses: actions/download-artifact@v2
        with:
          name: godot-template-linux-debug.zip

      - name: Upload artifacts to S3
        shell: bash
        if: env.AWS_ACCESS_KEY_ID != null
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          echo "branch: $BRANCH"
          mv godot.windows.opt.tools.64.s.exe godot-$BRANCH-$GODOT_TAG.exe
          mv godot.x11.opt.tools.64s godot-$BRANCH-$GODOT_TAG
          zip godot-editor-windows.zip godot-$BRANCH-$GODOT_TAG.exe
          zip godot-editor-linux.zip godot-$BRANCH-$GODOT_TAG
          aws s3 cp godot-editor-windows.zip s3://spine-godot/$BRANCH/$GODOT_TAG/
          aws s3 cp godot-editor-linux.zip s3://spine-godot/$BRANCH/$GODOT_TAG/
          aws s3 cp godot-editor-macos.zip s3://spine-godot/$BRANCH/$GODOT_TAG/
          echo "$GODOT_VERSION" > version.txt
          ls -lah
          zip spine-godot-templates-$BRANCH-$GODOT_TAG.zip iphone.zip osx.zip windows_64_debug.exe windows_64_release.exe linux_x11_64_debug linux_x11_64_release webassembly_debug.zip webassembly_release.zip android_release.apk android_debug.apk android_source.zip version.txt
          aws s3 cp spine-godot-templates-$BRANCH-$GODOT_TAG.zip s3://spine-godot/$BRANCH/$GODOT_TAG/spine-godot-templates-$BRANCH-$GODOT_TAG.tpz

  
